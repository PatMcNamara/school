Writing command line to /tmp/iNIPfRBKXm.dsk...
qemu -hda /tmp/iNIPfRBKXm.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q run priority-donate-lower
Pintos booting with 4,096 kB RAM...
375 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 31.
(priority-donate-lower) Lowering base priority...
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 21.
(priority-donate-lower) acquire must already have finished.
(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
(priority-donate-lower) end
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0115000
 cr2=0000000a error=00000000
 eax=0000000a ebx=c010c2a0 ecx=c0115020 edx=c010f530
 esi=c0007d85 edi=c010cd05 esp=00000009 ebp=c002ff38
 cs=0008 ds=0010 es=0010 ss=ff44
Kernel PANIC at ../../threads/interrupt.c:373 in intr_handler(): Unexpected interrupt
Call stack: 0xc010700c 0xc0101659 0xc010174f 0xc0115000 0xc0108f67 0xc01000a7 0xc010064f.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 24 ticks
Thread: 0 idle ticks, 24 kernel ticks, 0 user ticks
Console: 1291 characters output
Keyboard: 0 keys pressed
Powering off...
